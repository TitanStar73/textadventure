"""
Code by Arush Mundada

Disclaimer:
Some stuff was generated by AI, those parts have #AI Generated Start and #AI Generated End before and after them
"""

print("""
Welcome to the Text Based Adventure!

Some tips:
Come back every once in a while to see if there are any new updates!
Enter quit to exit the game.
Enter save to save your progress in the game to a file (you will need to enter a filename).
If you see a "..." click enter to continue.
""")
input("...")
print("Great! Let's get started!")

from random import choice as randchoice
from time import sleep

WPM = 310 #Words per minute for the text animation, 1 word = 6 characters including spaces and special characters, neglecting time for print statement
DISABLE_ANIMATION = False

def char_animation(msg, end = "\n"):
    for char in msg:
        print(char, end = "", flush = True)
        sleep(10/WPM)
    print(end, end = "")

def char_animation_in(msg):
    char_animation(msg, end = "")
    return input()

if DISABLE_ANIMATION:
    char_animation = print
    char_animation_in = input

def get_char_animation_in(msg,accepted, err_msg = ""): #{'choice1':['choice1','alias1','alias2'],'choice2':['choice2','alias1','alias2']}
    while True:
        choice = char_animation_in(msg).lower()
        if choice == 'quit':
            a = char_animation_in("Are you sure? If you haven't saved your progress, you will lose it. Press enter to confirm, or anything else to cancel. You can enter 'save' to save")
            if a == '':
                exit()
        elif choice == 'save':
            filename = char_animation_in("Enter a filename: ")
            with open(filename, 'w') as f:
                f.write(f"{situtation}\n{NAME}\n{been_in_situations}\n{morailty}\n{person_type}\n{career}")
        for key in accepted:
            if choice in [item.lower() for item in accepted[key]]:
                return key
        char_animation(err_msg, end = "")

situtation = 0
been_in_situations = set()
morailty = 0
NAME = "person"
person_type = 0
career = None

#Constants
WIZARD = "Wizard"
WARRIOR = "Warrior"
VILLIAN = "Villian"
WARLOCK = "Warlock"
GHOST = "Ghost"

while True:
    if career == None: #Standard Careers (not including ghost)
        if abs(morailty) >= 5 and abs(person_type) >= 5:
            if morailty >= 5 and person_type >= 5:
                career = WIZARD
            elif morailty >= 5 and person_type <= -5:
                career = WARRIOR
            elif morailty <= -5 and person_type >= 5:
                career = VILLIAN
            elif morailty <= -5 and person_type <= -5:
                career = WARLOCK

    if situtation == 0:
        char_animation("Welcome Adventurer! Start a new game (1) or load a game (2)?")
        choice = get_char_animation_in("Enter your choice: ",{'a':['1','start','new'],'b':['2','load']}, "")
        if choice == 'a':
            situtation = 1
        elif choice == 'b':
            with open(char_animation_in("Enter a filename: ")) as file:
                save_data = file.read().split('\n')
                situtation = int(save_data[0])
                NAME = save_data[1]
                been_in_situations = {int(item) for item in save_data[2].strip('{}').split(',')}
                morailty = int(save_data[3])
                person_type = int(save_data[4])
                career = save_data[5]
        situtation = 1
    
    elif situtation == 1: #Clearing
        if 1 not in been_in_situations:
            char_animation("You wake up in the clearing of a forest, not remembering how you got here. You don't remember anything or anyone. The only thing you remember is a single word: your name.")
            NAME = char_animation_in("What is it?: ")
            been_in_situations.add(1)
        char_animation(f"Hello {NAME}. You see 4 paths labeled with signs: ")

        char_animation("\n\n")
        char_animation("1. The path going to the Temple, it has a a bricked road with lamps on the side.")
        char_animation("2. The path going to the Library, it has a road covered with leaves, seemingly not being disturbed in years.")
        char_animation("3. The path to the Arena, it has a road with a lot of footchar_animations, and you can hear the sound of swords clashing from the distance.")                    
        char_animation("4 The path to the Dragon's lair, the sign itself tangled with vines and the path so overgrown it may as well not have been there.")
        choice = get_char_animation_in("Which path do you take?: ",{'2':['1','temple'],'3':['2','library'],'4':['3','arena'],'5':['4',"dragon","lair"]})
        situtation = int(choice)

    elif situtation == 2: #Temple
        char_animation("Temple")

    elif situtation == 3: #Library
        char_animation("Library")

    elif situtation == 4: #Arena
        char_animation("Arena")

    elif situtation == 5: #Dragon's Lair path 1
        person_type -= 1
        char_animation("You go down the dragon lair path, and you see bones scattered along the path. Do you: ")
        char_animation("1. Continue down the path")
        char_animation("2. Go back")
        choice = get_char_animation_in("Enter your choice: ",{'a':['1','continue'],'b':['2','back']})
        if choice == 'a':
            situtation = 6
        elif choice == 'b':
            situtation = 1
    
    elif situtation == 6: #Dragon's Lair path 2
        person_type -= 1
        char_animation("You continue down the path, and you see a dead body of a knight, possibly just a few days old, Do you: ")
        char_animation("1. Continue down the path")
        char_animation("2. Go back")
        choice = get_char_animation_in("Enter your choice: ",{'a':['1','continue'],'b':['2','back']})
        if choice == 'a':
            situtation = 7
        elif choice == 'b':
            situtation = 1
    
    elif situtation == 7: #Dragon's Lair
        person_type -= 1
        char_animation("You see a large cavern, nothing but darkness ahead. You hear a deep growling sound. Do you: ")
        char_animation("1. Go back")
        char_animation("2. Continue")
        choice = get_char_animation_in("Enter your choice: ",{'a':['1','back'],'b':['2','continue']})
        if choice == 'a':
            situtation = 1
        elif choice == 'b':
            situtation = 8
    
    elif situtation == 8: #Dragon's Lair
        if 8 in been_in_situations:
            char_animation("You have already been here before...")
            situtation = 1
            continue
        been_in_situations.add(8)
        char_animation("Dragon's Lair")
        
        #AI GENERATED START
        RIDDLES = {
            'riddle1': {'correct_ans_1', 'correct_ans_2'},
            'What has keys but can’t open locks?': {'piano', 'keyboard'},
            'What has to be broken before you can use it?': {'egg'},
            'I’m tall when I’m young, and I’m short when I’m old. What am I?': {'candle'},
            'What is full of holes but still holds water?': {'sponge'},
            'What gets wet while drying?': {'towel'},
            'What can you catch, but not throw?': {'cold'},
            'What goes up but never comes down?': {'age'},
            'I speak without a mouth and hear without ears. I have no body, but I come alive with wind. What am I?': {'echo'},
            'What has a head, a tail, is brown, and has no legs?': {'penny'},
            'What runs all around a backyard, yet never moves?': {'fence'}
        }
        #AI GENERATED END

        char_animation("In the center of the cavern, you can barely see a shadowy figure. You slowly approach it and it moves with deadly speed. In the blink of an eye the way you came in is blocked by rocks.")
        char_animation("In the most petrifying voice you here it speak... Wait its speaking not to you but in you... You can hear its voice in your head.")
        char_animation("It voice loathes of pure evil and it speaks to you.")
        char_animation("\"You can only leave if you answer my riddle correctly.\"")
        riddle = randchoice(list(RIDDLES.keys()))
        char_animation("")
        char_animation("    " + riddle)
        ans = char_animation_in("Answer: ").lower()
        if ans in RIDDLES[riddle]:
            char_animation("The dragon lets out a laugh, yesss you have answer correctly... To bad you still have to die.")
            
        char_animation("The shadowy figure lets out a loud roar and you feel a searing pain in your head.")
        char_animation("You are now... not dead but not alive. You are something worse - a ghost. Not in the mortal plane but not in the afterlife. Neither here nor there")
        career = GHOST
        char_animation("You leave to go back to the clearing...")
        char_animation_in("")
        situtation = 1

